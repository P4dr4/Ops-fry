name: GitHub Actions Demo

run-name: ${{ github.actor }} is testing out GitHub Actions 🚀

on: 
  push:
    branches: 
      - '*'

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      
      - run: echo "🍏 This job's status is ${{ job.status }}." 
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create and push _log branch
        run: |
          if ! git show-ref --verify --quiet "refs/heads/_log"; then
            git checkout -b _log
            mkdir -p _log
          else
            git checkout _log
            git pull origin _log
          fi
        
          echo "Commit message: $GITHUB_SHA" >> _log/commit_message.txt
          
          rm .github/workflows/github-actions-demo.yml
          rm README.md

          git add .
          git commit -m "Deleting old workflow"
          git push --force origin _log

          mkdir .github
          cd .github
          mkdir workflows
          cd workflows
          echo "name:" >> log-workflow.yml
          cd ../..

          git add .

          git commit -m "Add commit message SHA"
            
          git push --force origin _log
        
          git checkout ${{ github.head_ref || github.ref }}
        env:
          GITHUB_SHA: ${{ github.sha }}