name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀 ## TODO: List all the github parameters here and explain them.
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}." ## TODO: List all the github parameters here and explain them.
      - name: Upload Log
        run: |
          # Check if '_log' branch exists
          if ! git show-ref --verify --quiet "refs/heads/_log"; then
            # Create '_log' branch
            git checkout -b _log
            # Configure Git user identity
            git config user.email "paccarini.bar@outlook.com"
            git config user.name "P4dr4"
            # Create '_log' folder
            mkdir _log
            # Create a file in '_log' folder with commit message
            echo "Testing log branch creation" > _log/commit_message.txt
            # Add and commit changes
            git add .
            git commit -m "Create '_log' folder and add commit message"
            # Push the changes to '_log' branch
            git push origin _log
          else
            echo "📚 '_log' branch already exists."
            # Update the existing file in '_log' folder with a new commit message
            echo "Testing log branch creation" > _log/commit_message.txt
          fi
        shell: /usr/bin/bash -e {0}